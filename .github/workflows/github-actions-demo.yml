name: Default

on: [push, pull_request]

jobs:

  build:
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        include:
          #- os: macos-latest
          - os: ubuntu-latest
          #- os: windows-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: '--release'

      - name: Save Cache
        uses: actions/cache@v2
        with:
          path: target/
          key: ${{ runner.os }}-build-${{ env.GITHUB_JOB }}

  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-build-${{ env.GITHUB_JOB }}

      - name: Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: 'rustfmt, clippy'

      - name: Format Check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: '--all -- --check'
      
      - name: Clippy Check
        uses: actions-rs/cargo@v1
        with:
          command: clippy 
          args: '--release'

  test:
    needs: build
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        include:
          #- os: macos-latest
          - os: ubuntu-latest
          #- os: windows-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: target/
          key: ${{ runner.os }}-build-${{ env.GITHUB_JOB }}
      
      - name: Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
